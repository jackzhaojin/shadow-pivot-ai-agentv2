name: Build and Push Release to GHCR

on:
  push:
    branches:
      - 'release/*'  # Matches release/3.4, release/3.4.1, etc.
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/shadow-pivot-ai-agentv2

jobs:
  build-and-push-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract release version from branch name
        id: extract_version
        run: |
          # Extract version from branch name (e.g., release/3.4 -> 3.4, release/3.4.1 -> 3.4.1)
          VERSION=$(echo ${GITHUB_REF#refs/heads/release/})
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Release version: $VERSION"

      - name: Validate version format
        run: |
          VERSION="${{ steps.extract_version.outputs.version }}"
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+(\.[0-9]+)?$ ]]; then
            echo "‚ùå Invalid version format: $VERSION"
            echo "Expected format: #.# or #.#.# (e.g., 3.4 or 3.4.1)"
            exit 1
          fi
          echo "‚úÖ Valid version format: $VERSION"

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # --- Docker Build with Caching (same as main workflow) ---
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-release
          key: ${{ runner.os }}-buildx-release-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-release-

      - name: Build and Push Docker image with release tag
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.extract_version.outputs.version }}
            ${{ env.IMAGE_NAME }}:release-latest
          cache-from: type=local,src=/tmp/.buildx-cache-release
          cache-to: type=local,dest=/tmp/.buildx-cache-release
      # --- End Docker Build ---

      - name: Release Summary
        run: |
          echo "üöÄ Release build completed successfully!"
          echo ""
          echo "üì¶ Docker images pushed to GHCR:"
          echo "  - ${{ env.IMAGE_NAME }}:${{ steps.extract_version.outputs.version }}"
          echo "  - ${{ env.IMAGE_NAME }}:release-latest"
          echo ""
          echo "üí° This release is ready for deployment to your permanent infrastructure."
          echo "üîß No Azure services were restarted - deploy manually when ready."
